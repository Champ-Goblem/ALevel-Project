Imports System.Diagnostics
Imports System.Reflection.MethodInfo
Imports System.IO
Imports System.Windows.Forms
Public Class Events_Handler
    Public Enum errorEnum
        NULL_REFERECE_EXCEPTION = 1
        DIVIDE_BY_ZERO = 2
        POINT_INFINITY = 3
        POINT_NOT_ON_CURVE = 4
        VALUE_NOT_ZERO = 5
        VALUE_CONDITIONS_NOT_MET = 6
        ECPOINT_ARITHMETIC_ERROR = 7
        ENCRYPTION_FAILED

        PARAM_BIT_LENGTH_NOT_EQUAL = 10
        PARAM_B_EQUALS_ZERO = 11
        DOMAIN_PARAMETERS_EQUALS_ZERO = 12
        COFACTOR_NOT_EQUAL_TO_ONE = 13

        USERNAME_LONGER_THAN_MAX
        VALUE_LONGER_THAN_MAX
        FAILED_SERVER_AUTH
        CLIENT_ALREADY_CONNECTED
        STREAM_EXCEPTION
        SOCKET_EXCEPTION
    End Enum
    'Unable to use events when inheriting the class, RaiseEvent shows the error "Derived classes cannont raise base class events"
    'Protected Event Exception(ByVal Sender As System.Object, ByVal Message As System.String)
    Public Shared Sub errorHappened(ByVal Sender As System.Object, ByVal Message As System.String, ByVal Ex As errorEnum, ByVal currentSub As String)
        Dim outString As String
        outString = Sender.ToString & Space(5) & Ex.ToString & vbNewLine & "Error occured in: " & currentSub & vbNewLine & "Message generated by error: " & Message
        MessageBox.Show(outString, "Exception, Recovering", MessageBoxButtons.OK, MessageBoxIcon.Error)
        writeDebugLog(outString, currentSub, True)
    End Sub

    'Protected Event writeLog(ByVal Sender As System.Object, ByVal Message As System.String)
    Public Shared Sub writeDebugLog(ByVal Message As System.String, ByVal currentSub As String, Optional ByVal isException As Boolean = False)
        Dim outString As String
        If isException Then
            outString = "EXCEPTION: " & currentSub & Space(5) & Message
        Else
            outString = currentSub & ": " & Message
        End If
        'MessageBox.Show(outString, "Exception, Recovering", MessageBoxButtons.OK, MessageBoxIcon.Error)
        Debug.Print(outString)
        'Dim stmWriter As StreamWriter = Open_File()
        'stmWriter.WriteLine(outString)
        'stmWriter.Dispose()
        'stmWriter = Nothing
    End Sub
    'Private Shared Sub closeFile(ByVal Sender As Object, ByVal e As System.EventArgs)
    '    stmWriter.Write("\\\\\\\\\\\\\\\\\\\\\\\ TAIL OF LOG \\\\\\\\\\\\\\\\\\\\\\\")
    '    stmWriter.Close()
    'End Sub
    'Public Shared Function Open_File() As StreamWriter
    '    Dim debugLogFileName As String = Directory.GetCurrentDirectory() + "\Log.txt"
    '    If Not File.Exists(debugLogFileName) Or File.GetCreationTime(debugLogFileName) <> Date.Today Then
    '        Dim tmp As FileStream = File.Create(debugLogFileName)
    '        tmp.Close()
    '    End If
    '    Dim stmWriter As New StreamWriter(debugLogFileName, True)
    '    'Dim DT As New DateTime
    '    'DT = DateTime.Now
    '    'stmWriter.Write(DT.Date.ToShortDateString)
    '    'stmWriter.Write(Space(1) & DT.TimeOfDay.ToString & vbNewLine)
    '    'stmWriter.WriteLine("\\\\\\\\\\\\\\\\\\\\\\\ HEAD OF LOG \\\\\\\\\\\\\\\\\\\\\\\")
    '    Return stmWriter
    'End Function
End Class
